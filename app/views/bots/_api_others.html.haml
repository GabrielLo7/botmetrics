.api
  %ul.nav.nav-pills.nav-code{role: 'tablist'}
    %li.active{role: 'presentation'}
      %a{href: '#nodejs', data: { toggle: 'pill' }, role: 'tab'} node.js
    %li{role: 'presentation'}
      %a{href: '#ruby', data: { toggle: 'pill' }, role: 'tab'} ruby
    %li{role: 'presentation'}
      %a{href: '#go', data: { toggle: 'pill' }, role: 'tab'} go
    %li{role: 'presentation'}
      %a{href: '#https', data: { toggle: 'pill' }, role: 'tab'} https
  .tab-content.track-code-samples
    .tab-pane.active#nodejs{role: 'tabpanel'}
      %pre
        %code.hljs.javascript
          :preserve
            // Remember to run `npm install --save botmetrics` in your app.
            //
            // If you are using an Express-based app, parse the request body
            // and pass along req.body as an argument to Botmetrics
            // for example:
            var express = require('express');
            var app = express();
            var bodyParser = require('body-parser');
            var Botmetrics = require('botmetrics');

            app.use(bodyParser.json()); // for parsing application/json

            app.post('/webhooks', function(req, res) {
              Botmetrics.track(req.body, {
                apiKey: "#{current_user.api_key}",
                botId: "#{@bot.uid}"
              });
              res.status(200).send("");
            });

            app.listen(5000, function () {
              console.log('facebook bot listening on port 5000!');
            });

    .tab-pane#ruby{role: 'tabpanel'}
      %pre
        %code.hljs.ruby
          :preserve
            # Remember to run `gem install botmetrics-rb`
            # or add the following line to your Gemfile:
            # gem 'botmetrics-rb', require: 'botmetrics'
            #
            # Send the params to Botmetrics using the 'track' API:
            # for e.g. in Rails/Sinatra:

            BotMetrics::Client.new(
              api_key: "#{current_user.api_key}",
              bot_id: "#{@bot.uid}"
            ).track(params)
    .tab-pane#go{role: 'tabpanel'}
      %pre#go
        %code.hljs.go
          :preserve
            // In your Go Request handler, make a call to client.Track
            // with the request body
            import "github.com/botmetrics/go-botmetrics"

            http.HandleFunc("/webhooks", func(w http.ResponseWriter, r *http.Request) {
              postBody, err := ioutil.ReadAll(r.Body)

              if err != nil {
                panic(err)
              }

              client, err := botmetrics.NewBotMetricsClient(
                "#{current_user.api_key}",
                "#{@bot.uid}"
              )
              if err == nil {
                client.Track(postBody)
              }
            })
    .tab-pane#https{role: 'tabpanel'}
      %pre#https
        %code.hljs.bash
          :preserve
            # Botmetrics can also accept events over a HTTPS API.
            # You can POST to this endpoint using the API_KEY and BOT_ID
            # Be sure to escape the quotes in your JSON Payload
            # ie. (\"object\" instead of "object")

            curl -X POST \
            -H "Authorization: #{current_user.api_key}" \
            #{Settings.rails_host || Setting.hostname}/bots/#{@bot.uid}/events \
            -d "format=json&event=json-message-payload"