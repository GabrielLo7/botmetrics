.api
  %ul.nav.nav-pills.nav-code{role: 'tablist'}
    %li.active{role: 'presentation'}
      %a{href: '#nodejs', data: { toggle: 'pill' }, role: 'tab'} node.js
    %li{role: 'presentation'}
      %a{href: '#ruby', data: { toggle: 'pill' }, role: 'tab'} ruby
    %li{role: 'presentation'}
      %a{href: '#go', data: { toggle: 'pill' }, role: 'tab'} go
  .tab-content.track-code-samples
    .tab-pane.active#nodejs{role: 'tabpanel'}
      %pre
        %code.hljs.javascript
          :preserve
            // Remember to run `npm install --save botmetrics` in your app.
            //
            // If you are using an Express-based app, parse the request body
            // and pass along req.body as an argument to Botmetrics
            // for example:
            var express = require('express');
            var app = express();
            var bodyParser = require('body-parser');

            app.use(bodyParser.json()); // for parsing application/json

            app.post('/webhooks', function(req, res) {
              BotMetrics.track(req.body, {
                api_key: "#{current_user.api_key}",
                bot_id: "#{@bot.uid}"
              });
              res.status(200).send("");
            });
    .tab-pane#ruby{role: 'tabpanel'}
      %pre
        %code.hljs.ruby
          :preserve
            # Remember to run `gem install botmetrics-rb`
            # or add the following line to your Gemfile:
            # gem 'botmetrics-rb', require: 'botmetrics'
            #
            # Send the params to Botmetrics using the 'track' API:
            # for e.g. in Rails/Sinatra:

            BotMetrics::Client.new(
              api_key: "#{current_user.api_key}",
              bot_id: "#{@bot.uid}"
            ).track(params)
    .tab-pane#go{role: 'tabpanel'}
      %pre#go
        %code.hljs.go
          :preserve
            // In your Go Request handler, make a call to client.Track
            // with the post form value for the key "webhook"
            import "github.com/botmetrics/go-botmetrics"

            http.HandleFunc("/webhooks", func(w http.ResponseWriter, r *http.Request) {
              client, err := botmetrics.NewBotMetricsClient(
                "#{current_user.api_key}",
                "#{@bot.uid}"
              )
              if err != nil {
                client.Track(r.PostFormValue("webhook"))
              }
            })

