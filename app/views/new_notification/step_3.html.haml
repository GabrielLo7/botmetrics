.secondary-menu.row
  .col-sm-12
    = link_to bot_notifications_path(@bot), class: 'breadcrumb' do
      %h2 All Notifications
    %span.breadcrumb-separator
      \/
    %h2 New Notification
    %span.breadcrumb-separator
      \/
    %h2 Step 3

.row.steps
  .col-sm-12
    %h3 Step 3: Schedule Your Notification
    %p Would you like the notification to be sent now or at a later date?

.container-fluid.notifications-container
  = simple_form_for @notification, url: bot_new_notification_index_path(@bot), method: :post  do |f|
    .row
      .col-sm-8.col-sm-offset-2
        = f.input :content, input_html: { rows: 10 }, label: 'Message', placeholder: 'e.g. We are proud to announce a new feature...', input_html: { readonly: :readonly }

        .row
          .col-sm-12
            .radio
              = label_tag do
                = radio_button_tag :send, :now, :checked
                %strong ASAP
                %span (for e.g. emergency announcements such as maintenance windows)

            %hr

            .radio
              = label_tag do
                = radio_button_tag :send, :later_once
                %strong SCHEDULED
                %span (for e.g. one-off product announcements that you would like to make at a specified time)

            .scheduler-options.once
              = f.input :scheduled_at, label: false, placeholder: 'Choose a Date & Time', input_html: { readonly: :readonly }

            %hr

            .radio
              = label_tag do
                = radio_button_tag :send, :later_recurring
                %strong RECURRING
                %span (for e.g. notifications to users who have met conditions such as "hasn't interacted with bot in more than 5 days")

            .scheduler-options.recurring
              .input-group
                %span.input-group-addon every day at
                = f.input :scheduled_at, label: false, placeholder: 'Choose a Time', input_html: { readonly: :readonly }
              = f.input :recurring, as: :hidden

    .steps-navigation
      = link_to 'Previous', step_2_bot_new_notification_index_path(@bot, params.slice(:notification)), class: 'btn btn-lg btn-warning'
      &nbsp;
      = f.submit 'Send', class: 'btn btn-primary'

- content_for :page_scripts do
  :javascript
    App.page = new App.NotificationScheduler();
    App.page.run();
