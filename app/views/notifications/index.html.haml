.secondary-menu.row
  .col-md-4.col-sm-4.col-xs-4
    %h2 All Notifications
  .col-md-8.col-sm-8.col-xs-8.text-right
    .btn-group
      = link_to new_bot_notification_path(@bot), class: 'btn btn-primary' do
        New Notification

.container-fluid.notifications-container
  .row
    .col-sm-8.col-sm-offset-2
      %table.table.table-striped.tableized
        %thead
          %tr
            %th Content
            %th Status
            %th Scheduled/Sent At
            %th Actions
        %tbody
          - @notifications.each do |notification|
            %tr
              %td= truncate(notification.content, length: 20)
              %td
                #{notification.bot_user_ids.count} Queued / #{notification.messages.sent.count} Sent / #{notification.messages.failure.count} Failed / #{notification.messages.success.count} Success
              %td
                - if notification.send_immediately?
                  = notification.created_at.strftime('%b %d, %Y %l:%M %p')
                - else
                  = notification.scheduled_at
              %td
                - if notification.sent?
                  .text-muted
                    %em Already Sent
                - else
                  = link_to edit_bot_notification_path(@bot, notification) do
                    = icon('wrench')
                    Edit
                  &nbsp;|&nbsp;
                  = link_to bot_notification_path(@bot, notification), method: :delete do
                    = icon('trash')
                    Delete

      = will_paginate @notifications, renderer: BootstrapPagination::Rails
